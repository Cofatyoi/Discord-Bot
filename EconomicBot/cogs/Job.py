import disnake
from disnake.ext import commands
import random as r

class Job(commands.Cog):
    def __init__(self, bot: commands.Bot, conn):
        self.bot = bot
        self.conn = conn

    @commands.slash_command(
            name="job",
            description="–ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∏—Å–ø–æ–ª–Ω—è–µ—Ç –≤–∞—à—É —Ä–∞–±–æ—Ç—É. –†–∞–±–æ—Ç–∞–µ—Ç —Ä–∞–∑ –≤ 8 —á–∞—Å–æ–≤"
    )

    @commands.cooldown(1, (28800), commands.BucketType.user)
    async def job(
        self,
        inter,
        job: str = commands.Param(description='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–±–æ—Ç—É –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å.', choices=['–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', '3D –î–∏–∑–∞–π–Ω–µ—Ä', '2D –î–∏–∑–∞–π–Ω–µ—Ä', '–°—Ç—Ä–æ–∏—Ç–µ–ª—å', '–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞', '–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥', '–°—Ç–æ–ª—è—Ä', '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä'])
        ):
        user_id = inter.user
        
    #Cursor execute
        
        cursor = self.conn.cursor()
        profile_data = cursor.execute("SELECT cash, rep, lvl, ecclass, job FROM users WHERE id = ?", (user_id.id,))
        profile_data = cursor.fetchone()

    #SQLite ERROR
        
        if profile_data is None:
            cursor.execute("INSERT INTO users(name, id, cash, rep, lvl, ecclass, job) VALUES (?, ?, 0, 0, 1, ?, ?)", (str(user_id), user_id.id, "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", "–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞"))
            profile_data = (0, 0, 1, "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç", "–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞")

    #ERROR
            
        if job != profile_data[4]:
            await inter.send(embed=disnake.Embed(
                title="–ü—Ä–æ–±–ª–µ–º–∞ –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –∫–æ–º–º–∞–Ω–¥—ã **job**",
                description=f"–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–±–æ—Ç—É –∫–æ—Ç–æ—Ä–æ–π –Ω–µ—Ç—É —É –≤–∞—Å –≤ –ø—Ä–æ—Ñ–∏–ª–µ! –ï—Å–ª–∏ —É –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–∞–±–æ—Ç–∞ —Ç–æ–≥–¥–∞ –≤—ã–±–µ—Ä–∏—Ç–µ '–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞'",
                color=disnake.Colour.og_blurple()
            ))
            
        
    #Command
        jobs = profile_data[4]
        classes = profile_data[3]
        for i, min, max in [["3D –î–∏–∑–∞–π–Ω–µ—Ä", 500, 1500], ["–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", 1000, 3000], ["2D –î–∏–∑–∞–π–Ω–µ—Ä", 750, 2000], ["–°—Ç—Ä–æ–∏—Ç–µ–ª—å", 1000, 2500], ["–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞", 500, 1000], ["–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥", 750, 2000], ["–°—Ç–æ–ª—è—Ä", 1250, 2750], ["–ë—É—Ö–≥–∞–ª—Ç–µ—Ä", 750, 2000]]:
            if job == i and job == jobs:
                amount = r.randint(min, max)
                if job == '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç' and classes == "Senior":
                    amount = amount * 3
                elif classes == "Middle":
                    amount = amount * 2
                elif classes == "Junior":
                    amount = amount * 1.5
                amount_rep = r.randint(1, 10)
                cursor.execute("UPDATE users SET cash = cash + ?, rep = rep + ? WHERE id = ?", (amount, amount_rep, user_id.id))
                self.conn.commit()
                await inter.send(embed=disnake.Embed(
                    title="–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏!",
                    description=f"–°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏ –≤ —Å—Ñ–µ—Ä–µ {job}! –ó–∞ —ç—Ç–∏ 8 —á–∞—Å–æ–≤ —Ä–∞–±–æ—Ç—ã –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {amount} üåï. –¢–∞–∫ –∂–µ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {amount_rep} —Ä–µ–ø—É—Ç–∞—Ü–∏–∏. –í–∞–º –Ω—É–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –ø–æ—ç—Ç–æ–º—É —É –≤–∞—Å –∫—É–ª–¥–∞—É–Ω –Ω–∞ –∫–æ–º–º–∞–Ω–¥—É 8 —á–∞—Å–æ–≤",
                    color=disnake.Colour.og_blurple()
                ))
        cursor.close()

    #Cooldown ERROR
        
    @commands.Cog.listener()
    async def on_slash_command_error(self, inter, error):
        if isinstance(error, commands.CommandOnCooldown):
            seconds = error.retry_after
            hours = seconds // 3600
            minutes = (seconds % 3600) // 60
            seconds = seconds % 60
            
            await inter.response.send_message(embed=disnake.Embed( 
                title='–ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–µ.', 
                description=f'–°–ª–µ–¥—É—é—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ `{int(hours)} —á–∞—Å–æ–≤, {int(minutes)} –º–∏–Ω—É—Ç, {int(seconds)} —Å–µ–∫—É–Ω–¥`', 
                colour=disnake.Colour.og_blurple()
            ))